# spring.datasource.url=jdbc:mysql://localhost:3306/studentRestApi

# spring.datasource.url=jdbc:postgresql://localhost:5432/studentRestApi?createDatabaseIfNotExist=true
# spring.datasource.username=postgres
# spring.datasource.password=password
# spring.jpa.database=POSTGRESQL
# spring.datasource.platform=postgres

# spring.jpa.show-sql=true
# spring.jpa.generate-ddl=true
# spring.jpa.hibernate.ddl-auto=create-drop
# spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
# spring.datasource.initialization-mode=always
# spring.datasource.driver-class-name=com.postgresql.Driver

spring.datasource.url = jdbc:postgresql://localhost:5432/mysampl2
# spring.datasource.url = jdbc:postgresql://localhost:5432/studentRestApi
spring.datasource.username = postgres
spring.datasource.password = password
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect
# spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyJpaImpl
# spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl

# spring.jpa.properties.javax.persistence.schema-generation.create-source=metadata
# spring.jpa.properties.javax.persistence.schema-generation.scripts.action=create
# spring.jpa.properties.javax.persistence.schema-generation.scripts.create-target=create.sql
spring.jpa.hibernate.ddl-auto = validate
spring.jpa.show-sql = true

# my.db.url = jdbc:postgresql://localhost:5432/mysampl
